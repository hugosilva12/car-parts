# Define a 'Service' To Expose mysql to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysql  # DNS name 
  labels:
    app: mysql
    tier: database
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:       # mysql Pod Should contain same labels
    app: mysql
    tier: database
  clusterIP: None  # We Use DNS, Thus ClusterIP is not relevant

---
# Define a 'Persistent Voulume Claim'(PVC) for Mysql Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim 
  labels:
    app: mysql
    tier: database
spec:
  accessModes:
    - ReadWriteOnce   
  resources:
    requests:
      storage: 100Mi   
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  selector:
    matchLabels:
      app: mysql
      tier: database
  template:
    metadata:
      labels: 
        app: mysql
        tier: database
    spec:
      containers:
      - image: hugosilva12/mysql_v3:latest 
        args:
          - "--ignore-db-dir=lost+found" 
        name: mysql 
        env:
        - name: MYSQL_ROOT_PASSWORD 
          value: ")AdafGYkL&R#eecBppR^Cuf@#gq2HAI&"
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:        # Mounting volume obtained from Persistent Volume Claim
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql 
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim